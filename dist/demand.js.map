{"version":3,"sources":["demand.js"],"names":["global","document","JSON","XMLHttpRequest","setTimeout","clearTimeout","snippet","arrayPrototype","objectPrototype","XHR","undefined","emit","event","parameter","i","callback","pointer","listener","arrayPrototypeSlice","call","arguments","apply","NULL","log","error","isTypeOf","console","toString","assignModule","id","factory","provide","mockModules","modules","module","pledge","pledges","match","regexMatchParameter","replace","slice","join","mocks","Pledge","defer","push","demand","all","escapeRegularExpression","value","regexMatchRegex","createRegularExpression","expression","modifier","RegExp","getTimestamp","Date","resolveUrl","url","resolver","href","resolvePath","path","context","regexIsAbsolutePath","test","regexIsAbsoluteUri","regexMatchBaseUrl","resolveDependency","dependency","definition","deferred","STRING_STRING","DEMAND_ID","PROVIDE_ID","SETTINGS_ID","PATH_ID","MODULE_PREFIX_LOCAL","key","scopedDemand","bind","MODULE_PREFIX_SETTINGS","settings","MODULE_PREFIX_PATHS","registry","Loader","resolveParameter","isInstanceOf","resolve","pattern","matches","weight","mock","cache","handler","version","lifetime","process","resolveLoader","loader","state","PLEDGE_PENDING","onPreProcess","queue","add","isArray","objectPrototypeToString","isObject","object","type","isPositiveInteger","isFinite","Math","floor","merge","properties","property","targetProperty","targetPropertyIsObject","sourceProperty","target","length","Pattern","self","this","regexMatchTrailingSlash","matchPattern","matchUrl","xhr","timeout","MODULE_PREFIX_HANDLER","then","onPreRequest","dependencies","reject","storage","get","XDR","onprogress","ontimeout","onerror","onabort","Reason","onload","getResponseHeader","status","matchType","source","responseText","onPostRequest","set","open","send","readyState","abort","executor","handle","PLEDGE_RESOLVED","PLEDGE_REJECTED","aState","aParameter","result","shift","resolved","rejected","aResolved","aRejected","message","stack","Queue","items","window","isFunction","current","STRING_FUNCTION","arrayPrototypeConcat","concat","MODULE_PREFIX","MODULE_PREFIX_STORAGE","MODULE_PREFIX_PLUGIN","MODULE_PREFIX_FUNCTION","MODULE_PREFIX_VALIDATOR","STRING_BOOLEAN","XDomainRequest","regexMatchEvent","createElement","prototype","remove","aResolve","aReject","observePledge","index","countResolved","checkState","countTotal","race","traverse","depth","item","indention","Array","configure","temp","base","min","max","clean","on","events","split","list","keys","Object","isEnabled","indexOf","Storage","clear","expired","STORAGE_PREFIX","STORAGE_SUFFIX_STATE","STORAGE_SUFFIX_VALUE","regexMatchState","localStorage","exception","hasRemainingSpace","parse","getItem","expires","spaceBefore","remainingSpace","setItem","stringify","removeItem","getElementsByTagName","regexMatchSourcemap","replacement","exec","protocol","host","script","async","text","setAttribute","appendChild","handlerModule","onPostConfigure","options","prefix","fn","generateHash","string","hash","charCodeAt","generateConfiguration","bundle","configuration","/demand/handler/bundle","getModule","bundles","/demand","location","main"],"mappings":"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","file":"demand.js","sourcesContent":["/**\n * Qoopido demand\n *\n * Promise like module loader (XHR) with localStorage caching\n *\n * Copyright (c) 2016 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n(function(global, document, JSON, XMLHttpRequest, setTimeout, clearTimeout, snippet, arrayPrototype, objectPrototype, XHR, undefined) {\n\t'use strict';\n\t\n\tvar /** pointer */\n\t\t\tarrayPrototypeSlice     = arrayPrototype.slice,\n\t\t\tarrayPrototypeConcat    = arrayPrototype.concat,\n\t\t\tobjectPrototypeToString = objectPrototype.toString,\n\t\t/** constants */\n\t\t\tDEMAND_ID               = 'demand',\n\t\t\tPROVIDE_ID              = 'provide',\n\t\t\tSETTINGS_ID             = 'settings',\n\t\t\tPATH_ID                 = 'path',\n\t\t\tMODULE_PREFIX           = '/' + DEMAND_ID + '/',\n\t\t\tMODULE_PREFIX_STORAGE   = MODULE_PREFIX + 'storage/',\n\t\t\tMODULE_PREFIX_HANDLER   = MODULE_PREFIX + 'handler/',\n\t\t\tMODULE_PREFIX_PLUGIN    = MODULE_PREFIX + 'plugin/',\n\t\t\tMODULE_PREFIX_LOCAL     = MODULE_PREFIX + 'local',\n\t\t\tMODULE_PREFIX_SETTINGS  = MODULE_PREFIX + 'settings',\n\t\t\tMODULE_PREFIX_PATHS     = MODULE_PREFIX + 'paths',\n\t\t\tMODULE_PREFIX_FUNCTION  = MODULE_PREFIX + 'function/',\n\t\t\tMODULE_PREFIX_VALIDATOR = MODULE_PREFIX + 'validator/',\n\t\t\tPLEDGE_PENDING          = 'pending',\n\t\t\tPLEDGE_RESOLVED         = 'resolved',\n\t\t\tPLEDGE_REJECTED         = 'rejected',\n\t\t\tSTRING_STRING           = 'string',\n\t\t\tSTRING_BOOLEAN          = 'boolean',\n\t\t\tSTRING_FUNCTION         = 'function',\n\t\t\tNULL                    = null,\n\t\t\tXDR                     = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t/** regular expressions */\n\t\t\tregexIsAbsolutePath     = /^\\//,\n\t\t\tregexIsAbsoluteUri      = /^(http(s?):)?\\/\\//i,\n\t\t\tregexMatchTrailingSlash = /(.+)\\/$/,\n\t\t\tregexMatchParameter     = /^(mock:)?([+-])?((?:[-\\w]+\\/?)+)?(?:@(\\d+\\.\\d+.\\d+))?(?:#(\\d+))?!/,\n\t\t\tregexMatchRegex         = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n\t\t\tregexMatchEvent         = /^cache(Miss|Hit|Clear|Exceed)|(pre|post)(Configure.*|Resolve|Request|Process|Cache)$/,\n\t\t/** other */\n\t\t\tsettings                = { cache: {}, timeout: 8 * 1000, pattern: {}, modules: {}, handler: 'module' },\n\t\t\tresolver                = document.createElement('a'),\n\t\t\tregistry                = {},\n\t\t\tmocks                   = {},\n\t\t\tlistener                = {},\n\t\t\tregexMatchBaseUrl, queue, storage;\n\t\n\t/**\n\t * --------------------------------\n\t * Utility functions (private)\n\t * --------------------------------\n\t */\n\t\tfunction emit(event) {\n\t\t\tvar pointer = listener[event],\n\t\t\t\tparameter, i, callback;\n\t\t\t\n\t\t\tif(pointer) {\n\t\t\t\tparameter = arrayPrototypeSlice.call(arguments, 1);\n\t\t\t\t\n\t\t\t\tfor(i = 0; (callback = pointer[i]); i++) {\n\t\t\t\t\tcallback.apply(NULL, parameter);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction log(error) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tif(!isTypeOf(console, 'undefined')) {\n\t\t\t\tconsole.error(error.toString());\n\t\t\t}\n\t\t\t/* eslint-enable no-console */\n\t\t}\n\t\t\n\t\tfunction assignModule(id, factory) {\n\t\t\tprovide(id, function() { return factory; });\n\t\t}\n\t\n\t\tfunction mockModules(modules) {\n\t\t\tvar pledges = [],\n\t\t\t\ti = 0, module, pledge, parameter;\n\t\t\t\n\t\t\tfor(; (module = modules[i]); i++) {\n\t\t\t\tparameter  = module.match(regexMatchParameter);\n\t\t\t\tmodule     = module.replace(regexMatchParameter, '');\n\t\t\t\tmodules[i] = (parameter ? 'mock:' + parameter.slice(1).join('')  : 'mock:') + '!' + module;\n\t\t\t\tpledge     = (mocks[module] || (mocks[module] = Pledge.defer())).pledge;\n\t\t\t\t\n\t\t\t\tpledges.push(pledge);\n\t\t\t}\n\t\t\t\n\t\t\tdemand.apply(NULL, modules);\n\t\t\t\n\t\t\treturn Pledge.all(pledges);\n\t\t}\n\t\t\n\t\tfunction escapeRegularExpression(value) {\n\t\t\treturn value.replace(regexMatchRegex, '\\\\$&');\n\t\t}\n\t\t\n\t\tfunction createRegularExpression(expression, modifier) {\n\t\t\treturn new RegExp(expression, modifier);\n\t\t}\n\t\t\n\t\tfunction getTimestamp() {\n\t\t\treturn +new Date();\n\t\t}\n\t\t\n\t\tfunction resolveUrl(url) {\n\t\t\tresolver.href = url;\n\t\t\t\n\t\t\treturn resolver.href;\n\t\t}\n\t\t\n\t\tfunction resolvePath(path, context) {\n\t\t\tpath = path.replace(regexMatchParameter, '');\n\t\t\t\n\t\t\tif(!regexIsAbsolutePath.test(path) && !regexIsAbsoluteUri.test(path)) {\n\t\t\t\tpath = '/' + resolveUrl(((context && resolveUrl(context + '/../')) || '/') + path).replace(regexMatchBaseUrl, '');\n\t\t\t}\n\t\t\t\n\t\t\treturn path;\n\t\t}\n\t\t\n\t\tfunction resolveDependency(dependency, context) {\n\t\t\tvar path, definition, deferred;\n\t\t\t\n\t\t\tif(isTypeOf(dependency, STRING_STRING)) {\n\t\t\t\tpath = resolvePath(dependency, context);\n\t\t\t\t\n\t\t\t\tif(context && (dependency === DEMAND_ID || dependency === PROVIDE_ID || dependency === SETTINGS_ID || dependency === PATH_ID)) {\n\t\t\t\t\tswitch(dependency) {\n\t\t\t\t\t\tcase DEMAND_ID:\n\t\t\t\t\t\t\tpath       = MODULE_PREFIX_LOCAL + path;\n\t\t\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\t\t\tvar scopedDemand = demand.bind(context),\n\t\t\t\t\t\t\t\t\tkey;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor(key in demand) {\n\t\t\t\t\t\t\t\t\tscopedDemand[key] = demand[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn scopedDemand;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase PROVIDE_ID:\n\t\t\t\t\t\t\tpath       = MODULE_PREFIX_LOCAL + path;\n\t\t\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\t\t\treturn provide.bind(context);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase SETTINGS_ID:\n\t\t\t\t\t\t\tpath       = MODULE_PREFIX_SETTINGS + context;\n\t\t\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\t\t\treturn settings.modules[context];\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase PATH_ID:\n\t\t\t\t\t\t\tpath       = MODULE_PREFIX_PATHS + context;\n\t\t\t\t\t\t\tdefinition = function() {\n\t\t\t\t\t\t\t\treturn context;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t!registry[path] && provide(path, definition);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn (registry[path] || (registry[path] = new Loader(path, resolveParameter(dependency, context)))).pledge;\n\t\t\t} else {\n\t\t\t\tif(!isInstanceOf(dependency, Pledge)) {\n\t\t\t\t\tdeferred = Pledge.defer();\n\t\t\t\t\t\n\t\t\t\t\tdeferred.resolve(dependency);\n\t\t\t\t\t\n\t\t\t\t\treturn deferred.pledge;\n\t\t\t\t} else {\n\t\t\t\t\treturn dependency;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction resolveParameter(path, context) {\n\t\t\tvar parameter = path.match(regexMatchParameter),\n\t\t\t\tpattern   = settings.pattern,\n\t\t\t\tkey, match;\n\t\t\t\n\t\t\tpath = resolvePath(path, context);\n\t\t\t\n\t\t\tif(!regexIsAbsoluteUri.test(path)) {\n\t\t\t\tfor(key in pattern) {\n\t\t\t\t\tpattern[key].matches(path) && (!match || match.weight < pattern[key].weight) && (match = pattern[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn {\n\t\t\t\tmock:     (parameter && parameter[1]) ? true : false,\n\t\t\t\tcache:    (parameter && parameter[2]) ? parameter[2] === '+' : NULL,\n\t\t\t\thandler:  (parameter && parameter[3]) || settings.handler,\n\t\t\t\tversion:  (parameter && parameter[4]) || settings.version,\n\t\t\t\tlifetime: (parameter && parameter[5] && parameter[5] * 1000) || settings.lifetime,\n\t\t\t\turl:      match ? resolveUrl(match.process(path)) : path\n\t\t\t};\n\t\t}\n\t\t\n\t\tfunction resolveLoader(loader) {\n\t\t\tvar handler = loader.handler;\n\t\t\t\n\t\t\temit('preProcess', loader);\n\t\t\t\n\t\t\tif(loader.deferred.pledge.state === PLEDGE_PENDING) {\n\t\t\t\thandler.onPreProcess && handler.onPreProcess.call(loader);\n\t\t\t\thandler.process && queue.add(loader);\n\t\t\t}\n\t\t}\n\t\n\t/**\n\t * --------------------------------\n\t * Utility functions (public)\n\t * --------------------------------\n\t */\n\t\t/**\n\t\t * isArray\n\t\t *\n\t\t * Check whether a given value is of type array\n\t\t *\n\t\t * @param value\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isArray(value) {\n\t\t\treturn objectPrototypeToString.call(value) === '[object Array]';\n\t\t}\n\t\t\n\t\t/**\n\t\t * isObject\n\t\t *\n\t\t * Check whether a given object is of type object\n\t\t *\n\t\t * @param object\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isObject(object) {\n\t\t\treturn object && isTypeOf(object, 'object');\n\t\t}\n\t\t\n\t\t/**\n\t\t * isTypeOf\n\t\t *\n\t\t * Check whether a given object is of specified type\n\t\t *\n\t\t * @param object\n\t\t * @param {string} type\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isTypeOf(object, type) {\n\t\t\treturn typeof object === type;\n\t\t}\n\t\t\n\t\t/**\n\t\t * isInstanceOf\n\t\t *\n\t\t * Check whether a given object is an instance of specified type\n\t\t *\n\t\t * @param object\n\t\t * @param module\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isInstanceOf(object, module) {\n\t\t\treturn object instanceof module;\n\t\t}\n\t\t\n\t\t/**\n\t\t * isPositiveInteger\n\t\t *\n\t\t * Check whether a given value is a positive integer\n\t\t *\n\t\t * @param value\n\t\t *\n\t\t * @return {boolean}\n\t\t */\n\t\tfunction isPositiveInteger(value) {\n\t\t\treturn isTypeOf(value, 'number') && isFinite(value) && Math.floor(value) === value && value >= 0;\n\t\t}\n\t\n\t\t/**\n\t\t * merge\n\t\t *\n\t\t * Merge two or more objects into the first one passed in\n\t\t *\n\t\t * @param {...object} object\n\t\t *\n\t\t * @return {object}\n\t\t */\n\t\tfunction merge() {\n\t\t\tvar target = arguments[0],\n\t\t\t\ti = 1, properties, property, targetProperty, targetPropertyIsObject, sourceProperty;\n\t\t\t\n\t\t\tfor(; (properties = arguments[i]) !== undefined; i++) {\n\t\t\t\tfor(property in properties) {\n\t\t\t\t\ttargetProperty = target[property];\n\t\t\t\t\tsourceProperty = properties[property];\n\t\t\t\t\t\n\t\t\t\t\tif(sourceProperty !== undefined) {\n\t\t\t\t\t\tif(isObject(sourceProperty)) {\n\t\t\t\t\t\t\ttargetPropertyIsObject = isObject(targetProperty);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(sourceProperty.length !== undefined) {\n\t\t\t\t\t\t\t\ttargetProperty = (targetPropertyIsObject && targetProperty.length !== undefined) ? targetProperty : [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttargetProperty = (targetPropertyIsObject && targetProperty.length === undefined) ? targetProperty : {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttarget[property] = merge(targetProperty, sourceProperty);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[property] = sourceProperty;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn target;\n\t\t}\n\t\n\t/**\n\t * --------------------------------\n\t * Utility modules (private)\n\t * --------------------------------\n\t */\n\t\tfunction Pattern(pattern, url) {\n\t\t\tvar self = this;\n\t\t\t\n\t\t\tself.weight       = pattern.length;\n\t\t\tself.url          = resolveUrl(url).replace(regexMatchTrailingSlash, '$1');\n\t\t\tself.matchPattern = createRegularExpression('^' + escapeRegularExpression(pattern));\n\t\t\tself.matchUrl     = createRegularExpression('^' + escapeRegularExpression(url));\n\t\t}\n\t\t\n\t\tPattern.prototype = {\n\t\t\t/* only for reference\n\t\t\t weight:       0,\n\t\t\t url:          NULL,\n\t\t\t matchPattern: NULL,\n\t\t\t matchUrl:     NULL,\n\t\t\t */\n\t\t\tmatches: function(path) {\n\t\t\t\treturn this.matchPattern.test(path);\n\t\t\t},\n\t\t\tremove: function(url) {\n\t\t\t\treturn url.replace(this.matchUrl, '');\n\t\t\t},\n\t\t\tprocess: function(path) {\n\t\t\t\treturn path.replace(this.matchPattern, this.url);\n\t\t\t}\n\t\t};\n\t\t\n\t\tfunction Loader(path, parameter) {\n\t\t\tvar self     = this,\n\t\t\t\tdeferred = Pledge.defer(),\n\t\t\t\tpledge   = deferred.pledge,\n\t\t\t\thandler  = parameter.handler,\n\t\t\t\txhr, timeout;\n\t\t\t\n\t\t\tself.deferred = deferred;\n\t\t\tself.path     = path;\n\t\t\tself.url      = parameter.url;\n\t\t\tself.cache    = parameter.cache;\n\t\t\tself.version  = parameter.version;\n\t\t\tself.lifetime = parameter.lifetime;\n\t\t\t\n\t\t\tdemand(MODULE_PREFIX_HANDLER + handler)\n\t\t\t\t.then(\n\t\t\t\t\tfunction(handler) {\n\t\t\t\t\t\tself.handler = handler;\n\t\t\t\t\t\tself.mock    = parameter.mock ? mocks[self.path] : NULL;\n\t\t\t\t\t\t\n\t\t\t\t\t\thandler.onPreRequest && handler.onPreRequest.call(self);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(!self.mock) {\n\t\t\t\t\t\t\tif(self.cache === false || !storage.get(self)) {\n\t\t\t\t\t\t\t\temit('preRequest', self);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(pledge.state === PLEDGE_PENDING) {\n\t\t\t\t\t\t\t\t\txhr = regexMatchBaseUrl.test(self.url) ? new XHR() : new XDR();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\txhr.onprogress = function() {};\n\t\t\t\t\t\t\t\t\txhr.ontimeout = xhr.onerror = xhr.onabort = function() {\n\t\t\t\t\t\t\t\t\t\tdeferred.reject(new Reason('timeout requesting', self.path));\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\txhr.onload = function() {\n\t\t\t\t\t\t\t\t\t\tvar type = xhr.getResponseHeader && xhr.getResponseHeader('content-type');\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\ttimeout = clearTimeout(timeout);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif((!('status' in xhr) || xhr.status === 200) && (!type || !handler.matchType || handler.matchType.test(type))) {\n\t\t\t\t\t\t\t\t\t\t\tself.source = xhr.responseText;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\temit('postRequest', self);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif(pledge.state === PLEDGE_PENDING) {\n\t\t\t\t\t\t\t\t\t\t\t\thandler.onPostRequest && handler.onPostRequest.call(self);\n\t\t\t\t\t\t\t\t\t\t\t\tresolveLoader(self);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif(self.cache !== false) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpledge.then(function() { storage.set(self); });\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tdeferred.reject(new Reason('error requesting', self.path));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\txhr.open('GET', self.url, true);\n\t\t\t\t\t\t\t\t\txhr.send();\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\ttimeout = setTimeout(function() {\n\t\t\t\t\t\t\t\t\t\tif(xhr.readyState < 4) {\n\t\t\t\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, settings.timeout);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\t\tresolveLoader(self);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif(self.mock.dependencies) {\n\t\t\t\t\t\t\t\tself.mock.dependencies.then(\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\tself.mock.resolve(self);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tself.mock.reject\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tself.mock.resolve(self);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdeferred.reject\n\t\t\t\t);\n\t\t\t\n\t\t\treturn deferred;\n\t\t}\n\t\t\n\t\t/* only for reference\n\t\t Loader.prototype = {\n\t\t\t deferred: NULL,\n\t\t\t path:     NULL,\n\t\t\t url:      NULL,\n\t\t\t handler:  NULL,\n\t\t\t source:   NULL,\n\t\t\t mock:     NULL,\n\t\t\t cache:    NULL,\n\t\t\t lifetime: NULL,\n\t\t\t version:  NULL,\n\t\t\t state:    { version: NULL, expires: NULL, url: NULL } // will only be set by storage\n\t\t };\n\t\t */\n\t\n\t/**\n\t * --------------------------------\n\t * Utility modules (public)\n\t * --------------------------------\n\t */\n\t\t/**\n\t\t * Pledge\n\t\t *\n\t\t * @param {function} executor\n\t\t *\n\t\t * @constructor\n\t\t */\n\t\tfunction Pledge(executor) {\n\t\t\tvar self     = this,\n\t\t\t\tlistener = { resolved: [], rejected: [] };\n\t\t\t\n\t\t\tfunction resolve() {\n\t\t\t\thandle(PLEDGE_RESOLVED, arguments);\n\t\t\t}\n\t\t\t\n\t\t\tfunction reject() {\n\t\t\t\thandle(PLEDGE_REJECTED, arguments);\n\t\t\t}\n\t\t\t\n\t\t\tfunction handle(aState, aParameter) {\n\t\t\t\tvar pointer, result;\n\t\t\t\t\n\t\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\t\tself.state = aState;\n\t\t\t\t\tself.value = aParameter;\n\t\t\t\t\t\n\t\t\t\t\twhile(pointer = listener[aState].shift()) {\n\t\t\t\t\t\tresult = pointer.handler.apply(NULL, aParameter);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(result && typeof result.then === 'function') {\n\t\t\t\t\t\t\tresult.then(pointer.deferred.resolve, pointer.deferred.reject);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpointer.deferred.resolve(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlistener = NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tself.then = function(aResolved, aRejected) {\n\t\t\t\tvar deferred = Pledge.defer();\n\t\t\t\t\n\t\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\t\taResolved && listener[PLEDGE_RESOLVED].push({ handler: aResolved, deferred: deferred });\n\t\t\t\t\taRejected && listener[PLEDGE_REJECTED].push({ handler: aRejected, deferred: deferred });\n\t\t\t\t} else {\n\t\t\t\t\tswitch(self.state) {\n\t\t\t\t\t\tcase PLEDGE_RESOLVED:\n\t\t\t\t\t\t\tdeferred.resolve(aResolved && aResolved.apply(NULL, self.value));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase PLEDGE_REJECTED:\n\t\t\t\t\t\t\tdeferred.reject(aRejected && aRejected.apply(NULL, self.value));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn deferred.pledge;\n\t\t\t};\n\t\t\t\n\t\t\texecutor(resolve, reject);\n\t\t}\n\t\t\n\t\tPledge.prototype = {\n\t\t\tstate:  PLEDGE_PENDING\n\t\t\t/* only for reference\n\t\t\t value:  NULL,\n\t\t\t then:   NULL,\n\t\t\t cache:  NULL, // will only be set by storage\n\t\t\t */\n\t\t};\n\t\t\n\t\tPledge.defer = function() {\n\t\t\tvar self = {};\n\t\t\t\n\t\t\tself.pledge = new Pledge(function(aResolve, aReject) {\n\t\t\t\tself.resolve = aResolve;\n\t\t\t\tself.reject  = aReject;\n\t\t\t});\n\t\t\t\n\t\t\treturn self;\n\t\t};\n\t\t\n\t\tPledge.all = function(pledges) {\n\t\t\tvar deferred      = Pledge.defer(),\n\t\t\t\tresolved      = [],\n\t\t\t\trejected      = [],\n\t\t\t\tcountTotal    = pledges.length,\n\t\t\t\tcountResolved = 0,\n\t\t\t\ti = 0, pledge;\n\t\t\t\n\t\t\tfunction observePledge(index, pledge) {\n\t\t\t\tpledge.then(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tresolved[index] = arrayPrototypeSlice.call(arguments);\n\t\t\t\t\t\t\n\t\t\t\t\t\tcountResolved++;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcheckState();\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\trejected.push(arrayPrototypeSlice.call(arguments));\n\t\t\t\t\t\t\n\t\t\t\t\t\tcheckState();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t\t\n\t\t\tfunction checkState() {\n\t\t\t\tif(countResolved === countTotal) {\n\t\t\t\t\tdeferred.resolve.apply(NULL, arrayPrototypeConcat.apply([], resolved));\n\t\t\t\t} else if(rejected.length + countResolved === countTotal) {\n\t\t\t\t\tdeferred.reject.apply(NULL, arrayPrototypeConcat.apply([], rejected));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor(; pledge = pledges[i]; i++) {\n\t\t\t\tobservePledge(i, pledge);\n\t\t\t}\n\t\t\t\n\t\t\treturn deferred.pledge;\n\t\t};\n\t\t\n\t\tPledge.race = function(pledges) {\n\t\t\tvar deferred = Pledge.defer(),\n\t\t\t\ti = 0, pledge;\n\t\t\t\n\t\t\tfor(; pledge = pledges[i]; i++) {\n\t\t\t\tpledge.then(deferred.resolve, deferred.reject);\n\t\t\t}\n\t\t\t\n\t\t\treturn deferred.pledge;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Reason\n\t\t *\n\t\t * @param message\n\t\t * @param module\n\t\t * @param stack\n\t\t *\n\t\t * @constructor\n\t\t */\n\t\tfunction Reason(message, module, stack) {\n\t\t\tthis.message = message;\n\t\t\t\n\t\t\tmodule && (this.module = module);\n\t\t\tstack && (this.stack = arrayPrototypeSlice.call(stack));\n\t\t}\n\t\t\n\t\tReason.prototype = {\n\t\t\t/* only for reference\n\t\t\t message: NULL,\n\t\t\t module:  NULL,\n\t\t\t stack:   NULL,\n\t\t\t */\n\t\t\ttoString: function() {\n\t\t\t\tvar self   = this,\n\t\t\t\t\tresult = DEMAND_ID + ': ' + self.message + ' ' + (self.module ? '\"' + self.module + '\"' : '');\n\t\t\t\t\n\t\t\t\tif(self.stack) {\n\t\t\t\t\tresult = Reason.traverse(self.stack, result, 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\t\t\n\t\tReason.traverse = function(stack, value, depth) {\n\t\t\tvar indention = new Array(depth + 1).join(' '),\n\t\t\t\ti = 0, item;\n\t\t\t\n\t\t\tfor(; item = stack[i]; i++) {\n\t\t\t\tvalue += '\\n' + indention + '> ' + item.message + ' ' + (item.module ? '\"' + item.module + '\"' : '');\n\t\t\t\t\n\t\t\t\tif(item.stack) {\n\t\t\t\t\tvalue = Reason.traverse(item.stack, value, depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn value;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Queue\n\t\t *\n\t\t * @constructor\n\t\t */\n\t\tfunction Queue() {\n\t\t\tthis.items = 0;\n\t\t\tthis.stack = [];\n\t\t}\n\t\t\n\t\tQueue.prototype = {\n\t\t\t/* only for reference\n\t\t\t items:   NULL,\n\t\t\t queue:   NULL,\n\t\t\t current: NULL,\n\t\t\t */\n\t\t\tadd: function() {\n\t\t\t\tqueue.stack  = queue.stack.concat(arrayPrototypeSlice.call(arguments));\n\t\t\t\tqueue.items += arguments.length;\n\t\t\t\t\n\t\t\t\t!queue.current && queue.process();\n\t\t\t},\n\t\t\tprocess: function() {\n\t\t\t\tvar current;\n\t\t\t\t\n\t\t\t\tif(queue.items) {\n\t\t\t\t\tqueue.items--;\n\t\t\t\t\t\n\t\t\t\t\tcurrent = queue.current = queue.stack.shift();\n\t\t\t\t\t\n\t\t\t\t\tcurrent.handler.process.call(current);\n\t\t\t\t\temit('postProcess', current);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\n\t/**\n\t * --------------------------------\n\t * Demand\n\t * --------------------------------\n\t */\n\t\tfunction demand() {\n\t\t\tvar dependencies = arrayPrototypeSlice.call(arguments),\n\t\t\t\tcontext      = this !== window ? this : NULL,\n\t\t\t\ti = 0, dependency;\n\t\t\t\n\t\t\temit('preResolve', dependencies, context);\n\t\t\t\n\t\t\tfor(; (dependency = dependencies[i]); i++) {\n\t\t\t\tdependencies[i] = resolveDependency(dependency, context);\n\t\t\t}\n\t\t\t\n\t\t\temit('postResolve', dependencies, context);\n\t\t\t\n\t\t\treturn Pledge.all(dependencies);\n\t\t}\n\t\t\n\t\tdemand.configure = function(parameter) {\n\t\t\tvar cache    = parameter.cache,\n\t\t\t\tversion  = parameter.version,\n\t\t\t\ttimeout  = parameter.timeout,\n\t\t\t\tlifetime = parameter.lifetime,\n\t\t\t\tbase     = parameter.base,\n\t\t\t\tpattern  = parameter.pattern,\n\t\t\t\tmodules  = parameter.modules,\n\t\t\t\tpointer  = settings.modules,\n\t\t\t\tkey, temp;\n\t\t\t\n\t\t\tif(isTypeOf(cache, STRING_BOOLEAN)) {\n\t\t\t\tsettings.cache[''] = { weight: 0, state: cache };\n\t\t\t} else if(isObject(cache)) {\n\t\t\t\tfor(key in cache) {\n\t\t\t\t\tsettings.cache[key] = { weight: key.length, state: cache[key] };\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(isTypeOf(version, STRING_STRING)) {\n\t\t\t\tsettings.version = version;\n\t\t\t}\n\t\t\t\n\t\t\tif(isPositiveInteger(timeout)) {\n\t\t\t\tsettings.timeout = Math.min(Math.max(timeout, 2), 12) * 1000;\n\t\t\t}\n\t\t\t\n\t\t\tif(isPositiveInteger(lifetime) && lifetime > 0) {\n\t\t\t\tsettings.lifetime = lifetime * 1000;\n\t\t\t}\n\t\t\t\n\t\t\tif(isTypeOf(base, STRING_STRING) && base !== '') {\n\t\t\t\tsettings.pattern.base = new Pattern('', base);\n\t\t\t}\n\t\t\t\n\t\t\tif(isObject(pattern)) {\n\t\t\t\tfor(key in pattern) {\n\t\t\t\t\tkey !== 'base' && (settings.pattern[key] = new Pattern(key, pattern[key]));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(isObject(modules)) {\n\t\t\t\tfor(key in modules) {\n\t\t\t\t\tif(key !== MODULE_PREFIX_STORAGE) {\n\t\t\t\t\t\ttemp = pointer[key] = pointer[key] || {};\n\t\t\t\t\t\t\n\t\t\t\t\t\temit('preConfigure:' + key, temp);\n\t\t\t\t\t\t\n\t\t\t\t\t\tmerge(temp, modules[key]);\n\t\t\t\t\t\t\n\t\t\t\t\t\temit('postConfigure:' + key, temp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tdemand.remove = function(path) {\n\t\t\tif(registry[path]) {\n\t\t\t\t!!registry[path].cache && storage.clean.path(path);\n\t\t\t\t\n\t\t\t\tdelete registry[path];\n\t\t\t\tdelete mocks[path];\n\t\t\t}\n\t\t};\n\t\t\n\t\tdemand.on = function(events, callback) {\n\t\t\tvar event;\n\t\t\t\n\t\t\tif(isTypeOf(events, STRING_STRING) && isTypeOf(callback, STRING_FUNCTION)) {\n\t\t\t\tevents = events.split(' ');\n\t\t\t\t\n\t\t\t\twhile(event = events.shift()) {\n\t\t\t\t\tif(regexMatchEvent.test(event)) {\n\t\t\t\t\t\t(listener[event] || (listener[event] = [])).push(callback);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn demand;\n\t\t};\n\t\t\n\t\tdemand.list = function(state) {\n\t\t\tvar keys, path, pledge;\n\t\t\t\n\t\t\tif(state) {\n\t\t\t\tkeys = [];\n\t\t\t\t\n\t\t\t\tfor(path in registry) {\n\t\t\t\t\tpledge = registry[path].pledge;\n\t\t\t\t\t\n\t\t\t\t\tif(pledge.state === state || pledge.cache === state) {\n\t\t\t\t\t\tkeys.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tkeys = Object.keys(registry);\n\t\t\t}\n\t\t\t\n\t\t\treturn keys;\n\t\t};\n\n\t\t\n\t/**\n\t * --------------------------------\n\t * Provide\n\t * --------------------------------\n\t */\n\t\tfunction provide() {\n\t\t\tvar parameter    = arguments,\n\t\t\t\tpath         = isTypeOf(parameter[0], STRING_STRING) ? parameter[0] : NULL,\n\t\t\t\tdependencies = isArray(parameter[path ? 1 : 0]) ? parameter[path ? 1 : 0] : NULL,\n\t\t\t\tdefinition   = dependencies ? parameter[path ? 2 : 1] : parameter[path ? 1 : 0],\n\t\t\t\tdeferred, pledge, isFunction;\n\t\t\t\n\t\t\tif(!path && queue.current) {\n\t\t\t\tpath = queue.current.path;\n\t\t\t\t\n\t\t\t\tqueue.current = NULL;\n\t\t\t\t\n\t\t\t\tqueue.items > 0 && queue.process();\n\t\t\t}\n\t\t\t\n\t\t\tif(path) {\n\t\t\t\tpath       = resolvePath(path, this);\n\t\t\t\tdeferred   = registry[path] || (registry[path] = Pledge.defer());\n\t\t\t\tpledge     = deferred.pledge;\n\t\t\t\tisFunction = isTypeOf(definition, STRING_FUNCTION);\n\t\t\t\t\n\t\t\t\tif(pledge.state === PLEDGE_PENDING) {\n\t\t\t\t\tif(dependencies) {\n\t\t\t\t\t\tdemand\n\t\t\t\t\t\t\t.apply(path, dependencies)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\tfunction() { deferred.resolve(isFunction ? definition.apply(NULL, arguments) : definition); },\n\t\t\t\t\t\t\t\tfunction() { log(new Reason('error providing', path, arguments)); }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdeferred.resolve(isFunction ? definition() : definition);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow 'unspecified anonymous provide';\n\t\t\t}\n\t\t}\n\t\n\t/**\n\t * --------------------------------\n\t * Inline modules\n\t * --------------------------------\n\t */\n\t\t/**\n\t\t * /demand/storage\n\t\t */\n\t\t(function(){\n\t\t\tfunction definition() {\n\t\t\t\tvar STORAGE_PREFIX       = '[' + DEMAND_ID + ']',\n\t\t\t\t\tSTORAGE_SUFFIX_STATE = '[state]',\n\t\t\t\t\tSTORAGE_SUFFIX_VALUE = '[value]',\n\t\t\t\t\tregexMatchState      = createRegularExpression('^' + escapeRegularExpression(STORAGE_PREFIX) + '\\\\[(.+?)\\\\]' + escapeRegularExpression(STORAGE_SUFFIX_STATE) + '$'),\n\t\t\t\t\tlocalStorage         = (function() { try { return 'localStorage' in global && global.localStorage; } catch(exception) { return false; } }()),\n\t\t\t\t\thasRemainingSpace    = localStorage && 'remainingSpace' in localStorage;\n\t\t\t\t\n\t\t\t\tfunction isEnabled(loader) {\n\t\t\t\t\tvar key, pointer, match;\n\t\t\t\t\t\n\t\t\t\t\tif(loader.cache !== NULL) {\n\t\t\t\t\t\treturn loader.cache;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(key in settings.cache) {\n\t\t\t\t\t\tpointer = settings.cache[key];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(loader.path.indexOf(key) === 0 && (!match || pointer.weight > match.weight)) {\n\t\t\t\t\t\t\tmatch = pointer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn match ? match.state : false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction Storage() {\n\t\t\t\t\tthis.clear.expired();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tStorage.prototype = {\n\t\t\t\t\tget: function(loader) {\n\t\t\t\t\t\tvar path = loader.path,\n\t\t\t\t\t\t\tid, state, pledge;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(localStorage && isEnabled(loader)) {\n\t\t\t\t\t\t\tid     = STORAGE_PREFIX + '[' + path + ']';\n\t\t\t\t\t\t\tstate  = JSON.parse(localStorage.getItem(id + STORAGE_SUFFIX_STATE));\n\t\t\t\t\t\t\tpledge = loader.deferred.pledge;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(state && state.version === loader.version && state.url === loader.url && ((!state.expires && !loader.lifetime) || state.expires > getTimestamp())) {\n\t\t\t\t\t\t\t\tpledge.cache  = 'hit';\n\t\t\t\t\t\t\t\tloader.source = localStorage.getItem(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\temit('cacheHit', loader);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treturn loader.source;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpledge.cache = 'miss';\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\temit('cacheMiss', loader);\n\t\t\t\t\t\t\t\tthis.clear.path(path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function(loader) {\n\t\t\t\t\t\tvar path = loader.path,\n\t\t\t\t\t\t\tlifetime, id, spaceBefore;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(localStorage && isEnabled(loader)) {\n\t\t\t\t\t\t\temit('preCache', loader);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlifetime = loader.lifetime;\n\t\t\t\t\t\t\tid       = STORAGE_PREFIX + '[' + path + ']';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tloader.state = { version: loader.version, expires: lifetime ? getTimestamp() + lifetime : lifetime, url: loader.url };\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tspaceBefore = hasRemainingSpace ? localStorage.remainingSpace : NULL;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlocalStorage.setItem(id + STORAGE_SUFFIX_VALUE, loader.source);\n\t\t\t\t\t\t\t\tlocalStorage.setItem(id + STORAGE_SUFFIX_STATE, JSON.stringify(loader.state));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// strict equality check with \"===\" is required due to spaceBefore might be \"0\"\n\t\t\t\t\t\t\t\tif(spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) {\n\t\t\t\t\t\t\t\t\tthrow 'QUOTA_EXCEEDED_ERR';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\temit('postCache', loader);\n\t\t\t\t\t\t\t} catch(error) {\n\t\t\t\t\t\t\t\temit('cacheExceed', loader);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tclear: {\n\t\t\t\t\t\tpath: function(path) {\n\t\t\t\t\t\t\tvar id;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(localStorage) {\n\t\t\t\t\t\t\t\tid = STORAGE_PREFIX + '[' + path + ']';\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlocalStorage.removeItem(id + STORAGE_SUFFIX_STATE);\n\t\t\t\t\t\t\t\tlocalStorage.removeItem(id + STORAGE_SUFFIX_VALUE);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\temit('cacheClear', path);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tall: function() {\n\t\t\t\t\t\t\tvar key, match;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(localStorage) {\n\t\t\t\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\t\t\t\tmatch = key.match(regexMatchState);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\t\tthis.path(match[1]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\texpired: function() {\n\t\t\t\t\t\t\tvar key, match, state;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(localStorage) {\n\t\t\t\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\t\t\t\tmatch = key.match(regexMatchState);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\t\tstate = JSON.parse(localStorage.getItem(STORAGE_PREFIX + '[' + match[1] + ']' + STORAGE_SUFFIX_STATE));\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif(state && state.expires > 0 && state.expires <= getTimestamp()) {\n\t\t\t\t\t\t\t\t\t\t\tthis.path(match[1]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tdemand.clear = (storage = new Storage()).clear;\n\t\t\t\t\n\t\t\t\treturn storage;\n\t\t\t}\n\t\t\t\n\t\t\tprovide(MODULE_PREFIX_STORAGE, definition);\n\t\t}());\n\t\n\t\t/**\n\t\t * /demand/handler/module\n\t\t */\n\t\t(function() {\n\t\t\tfunction definition() {\n\t\t\t\tvar target              = document.getElementsByTagName('head')[0],\n\t\t\t\t\tregexMatchSourcemap = /\\/\\/#\\s+sourceMappingURL\\s*=\\s*(?!(?:http[s]?:)?\\/\\/)(.+?)\\.map/g;\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\tmatchType: /^(application|text)\\/(x-)?javascript/,\n\t\t\t\t\tonPreRequest: function() {\n\t\t\t\t\t\tvar url  = this.url;\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.url = url.slice(-3) !== '.js' ? url + '.js' : url;\n\t\t\t\t\t},\n\t\t\t\t\tonPostRequest: function() {\n\t\t\t\t\t\tvar self   = this,\n\t\t\t\t\t\t\tsource = self.source,\n\t\t\t\t\t\t\tmatch, replacement;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(source) {\n\t\t\t\t\t\t\twhile(match = regexMatchSourcemap.exec(source)) {\n\t\t\t\t\t\t\t\tif(regexIsAbsolutePath.test(match[1])) {\n\t\t\t\t\t\t\t\t\tresolver.href = self.url;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\treplacement = resolver.protocol + '//' + resolver.host + match[1];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treplacement = resolveUrl(self.url + '/../' + match[1]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tsource = source.replace(match[0], '//# sourceMappingURL=' + replacement + '.map');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself.source = source;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tprocess: function() {\n\t\t\t\t\t\tvar source = this.source,\n\t\t\t\t\t\t\tscript;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(source) {\n\t\t\t\t\t\t\tscript       = document.createElement('script');\n\t\t\t\t\t\t\tscript.async = true;\n\t\t\t\t\t\t\tscript.text  = source;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tscript.setAttribute('demand-path', this.path);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttarget.appendChild(script);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tprovide(MODULE_PREFIX_HANDLER + 'module', definition);\n\t\t}());\n\t\t\n\t\t/**\n\t\t * /demand/handler/bundle\n\t\t */\n\t\t(function() {\n\t\t\tvar path = MODULE_PREFIX_HANDLER + 'bundle';\n\t\t\t\n\t\t\tfunction definition(settings, handlerModule) {\n\t\t\t\tfunction onPostConfigure(options) {\n\t\t\t\t\tsettings = isObject(options) ? options : {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdemand.on('postConfigure:' + path, onPostConfigure);\n\t\t\t\tonPostConfigure(settings);\n\t\t\t\t\n\t\t\t\treturn {\n\t\t\t\t\tmatchType:     handlerModule.matchType,\n\t\t\t\t\tonPostRequest: handlerModule.onPostRequest,\n\t\t\t\t\tonPreProcess: function() {\n\t\t\t\t\t\tvar self     = this,\n\t\t\t\t\t\t\tdeferred = self.deferred,\n\t\t\t\t\t\t\tmodules  = settings[self.path];\n\t\t\t\t\t\t\n\t\t\t\t\t\tmockModules(modules)\n\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\tqueue.add.apply(null, arguments);\n\t\t\t\t\t\t\t\t\thandlerModule.process.call(self);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tdemand\n\t\t\t\t\t\t\t\t\t\t.apply(null, modules)\n\t\t\t\t\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t\t\t\t\tdeferred.resolve,\n\t\t\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.reject(new Reason('error resolving', self.path, arguments));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\tdeferred.reject(new Reason('error mocking', null, arguments));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tprovide(path, [ 'settings', '/demand/handler/module' ], definition);\n\t\t}());\n\t\t\n\t\t/**\n\t\t * /demand/plugin/genie\n\t\t */\n\t\t(function(){\n\t\t\tvar path = MODULE_PREFIX_PLUGIN + 'genie';\n\t\t\t\n\t\t\tfunction definition(settings) {\n\t\t\t\tvar pattern = [],\n\t\t\t\t\tkey;\n\t\t\t\t\n\t\t\t\tfunction onPostConfigure(options) {\n\t\t\t\t\tif(isObject(options)) {\n\t\t\t\t\t\tpattern.length = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor(key in options) {\n\t\t\t\t\t\t\tpattern.push({ prefix: key, weight: key.length, fn: options[key] });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdemand.on('postConfigure:' + path, onPostConfigure);\n\t\t\t\tonPostConfigure(settings);\n\t\t\t\t\n\t\t\t\tfunction matchPattern(path) {\n\t\t\t\t\tvar i = 0, pointer, match;\n\t\t\t\t\t\n\t\t\t\t\tfor(; (pointer = pattern[i]); i++) {\n\t\t\t\t\t\tif(path.indexOf(pointer.prefix) === 0 && (!match || pointer.weight > match.weight)) {\n\t\t\t\t\t\t\tmatch = pointer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction generateHash(string){\n\t\t\t\t\tvar hash = 0,\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\n\t\t\t\t\tfor(; i < string.length; i++) {\n\t\t\t\t\t\thash = ((hash << 5) - hash) + string.charCodeAt(0);\n\t\t\t\t\t\thash = hash & hash;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn hash;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction generateConfiguration(bundle) {\n\t\t\t\t\tvar matches       = bundle.matches,\n\t\t\t\t\t\tconfiguration = { pattern: {}, modules: { '/demand/handler/bundle': {} } },\n\t\t\t\t\t\ti = 0, pointer, dependency;\n\t\t\t\t\t\n\t\t\t\t\tconfiguration.pattern[bundle.id]                           = bundle.fn(matches);\n\t\t\t\t\tconfiguration.modules['/demand/handler/bundle'][bundle.id] = pointer = [];\n\t\t\t\t\t\n\t\t\t\t\tfor(; (dependency = matches[i]); i++) {\n\t\t\t\t\t\tpointer.push(dependency.id);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn configuration;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction getModule(path) {\n\t\t\t\t\treturn (registry[path] && registry[path].pledge) || (mocks[path] && mocks[path].pledge);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdemand.on('preResolve', function(dependencies, context) {\n\t\t\t\t\tvar bundles = {},\n\t\t\t\t\t\ti = 0, dependency, id, parameter, pattern, keys, prefix, bundle, matches, mocks;\n\t\t\t\t\t\n\t\t\t\t\tfor(; (dependency = dependencies[i]); i++) {\n\t\t\t\t\t\tif(isTypeOf(dependency, 'string')) {\n\t\t\t\t\t\t\tid = resolvePath(dependency, context);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!getModule(id) && (parameter = resolveParameter(dependency, context)) && parameter.handler === 'module' && (pattern = matchPattern(id))) {\n\t\t\t\t\t\t\t\t(bundles[pattern.prefix] || (bundles[pattern.prefix] = { fn: pattern.fn, matches: [], mocks: [] })).matches.push({ id: id, path: dependency, index: i });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tkeys = Object.keys(bundles);\n\t\t\t\t\t\n\t\t\t\t\tif(keys.length) {\n\t\t\t\t\t\tfor(prefix in bundles) {\n\t\t\t\t\t\t\tbundle  = bundles[prefix];\n\t\t\t\t\t\t\tmatches = bundle.matches;\n\t\t\t\t\t\t\tmocks   = bundle.mocks;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(matches.length > 1) {\n\t\t\t\t\t\t\t\tbundle.id = path + '/' + generateHash(JSON.stringify(bundle.matches));\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfor(i = 0; (dependency = matches[i]); i++) {\n\t\t\t\t\t\t\t\t\tdependencies[dependency.index] = 'mock:!' + dependency.id;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tmocks.push(dependency.id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tmockModules(mocks);\n\t\t\t\t\t\t\t\tdemand.configure(generateConfiguration(bundle));\n\t\t\t\t\t\t\t\tdemand('bundle!' + bundle.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\tprovide(path, [ 'settings' ], definition);\n\t\t}());\n\t\t\n\t/**\n\t * --------------------------------\n\t * Initialization\n\t * --------------------------------\n\t */\n\t\tregexMatchBaseUrl = createRegularExpression('^' + escapeRegularExpression(resolveUrl('/')));\n\t\t\n\t\tdemand.configure({ cache: true, base: '/', pattern: { '/demand': resolveUrl(((snippet && snippet.url) || location.href) + '/../').slice(0, -1)} });\n\t\tsnippet && snippet.settings && demand.configure(snippet.settings);\n\t\t\n\t\tassignModule(MODULE_PREFIX_VALIDATOR + 'isArray', isArray);\n\t\tassignModule(MODULE_PREFIX_VALIDATOR + 'isObject', isObject);\n\t\tassignModule(MODULE_PREFIX_VALIDATOR + 'isTypeOf', isTypeOf);\n\t\tassignModule(MODULE_PREFIX_VALIDATOR + 'isInstanceOf', isInstanceOf);\n\t\tassignModule(MODULE_PREFIX_VALIDATOR + 'isPositiveInteger', isPositiveInteger);\n\t\tassignModule(MODULE_PREFIX_FUNCTION + 'merge', merge);\n\t\tassignModule(MODULE_PREFIX + 'pledge', Pledge);\n\t\tassignModule(MODULE_PREFIX + 'reason', Reason);\n\t\t\n\t\tqueue = new Queue();\n\t\t\n\t\tglobal.demand  = demand;\n\t\tglobal.provide = provide;\n\t\t\n\t\tif(snippet && snippet.main) {\n\t\t\tdemand(snippet.main);\n\t\t}\n}(this, document, JSON, XMLHttpRequest, setTimeout, clearTimeout, 'demand' in this && demand, Array.prototype, Object.prototype, XMLHttpRequest));"],"sourceRoot":"/source/"}