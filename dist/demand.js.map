{"version":3,"sources":["demand.js"],"names":["global","document","localStorage","JSON","XMLHttpRequest","setTimeout","clearTimeout","configUrl","configMain","configSettings","demand","self","this","module","isInstanceOf","Module","NULL","dependencies","arrayPrototypeSlice","call","arguments","forEach","resolveDependency","Pledge","all","provide","loader","path","isTypeOf","STRING_STRING","definition","queue","current","type","pledge","defered","resolved","resolve","pointer","modules","timeout","then","reject","Error","cached","store","length","next","log","when","configure","aConfig","key","aCache","cache","aDebug","debug","aVersion","version","aTimeout","aLifetime","lifetime","aBase","base","aPattern","pattern","aProbes","probes","STRING_BOOLEAN","isPositiveInteger","timeoutXhr","Math","min","max","timeoutQueue","Pattern","url","isObject","dependency","index","Loader","assign","id","factory","getTimestamp","Date","addTimestamp","aUrl","resolver","href","value","search","param","aMessage","console","STRING_UNDEFINED","toString","regex","expression","modifier","RegExp","escape","aValue","replace","regexMatchSpecial","removeProtocol","regexMatchProtocol","isAbsolute","aPath","regexIsAbsolute","test","object","isFinite","floor","executor","handle","PLEDGE_RESOLVED","PLEDGE_REJECTED","aState","aParameter","state","PLEDGE_PENDING","listener","aHandler","apply","rejected","aResolved","aRejected","push","aModule","aStack","message","stack","weight","regexPattern","regexUrl","Queue","aParent","xhr","defer","DEMAND_PREFIX_HANDLER","handler","retrieve","add","regexMatchUrl","XHR","XDR","onprogress","ontimeout","onerror","onabort","onload","source","responseText","open","prepare","send","readyState","abort","aDefinition","aDependencies","regexMatchLsState","storage","handlerJavascript","Array","prototype","slice","arrayPrototypeConcat","concat","target","getElementsByTagName","createElement","DEMAND_ID","DEMAND_PREFIX","DEMAND_SUFFIX_STATE","DEMAND_SUFFIX_VALUE","DEMAND_PREFIX_VALIDATOR","DEFAULT_HANDLER","XDomainRequest","regexMatchHandler","regexMatchSourcemap","hasRemainingSpace","defaults","match","isLoader","matches","process","get","parse","getItem","expires","clear","set","spaceBefore","remainingSpace","setItem","stringify","error","removeItem","indexOf","script","async","text","setAttribute","appendChild","modify","replacement","exec","constructor","aResolve","aReject","aPledges","countTotal","countResolved","aPledge","aIndex","race","result","traverse","depth","indention","join","item","remove","aItem","shift","probe","isPending","main","settings"],"mappings":"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","file":"demand.js","sourcesContent":["/**\n * Qoopido demand\n *\n * Promise like module loader (XHR) with localStorage caching\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(global, document, localStorage, JSON, XMLHttpRequest, setTimeout, clearTimeout, configUrl, configMain, configSettings) {\n\t'use strict';\n\n\tvar // shortcuts\n\t\t\tarrayPrototypeSlice     = Array.prototype.slice,\n\t\t\tarrayPrototypeConcat    = Array.prototype.concat,\n\t\t\ttarget                  = document.getElementsByTagName('head')[0],\n\t\t\tresolver                = document.createElement('a'),\n\t\t// constants\n\t\t\tDEMAND_ID               = 'demand',\n\t\t\tDEMAND_PREFIX           = '[' + DEMAND_ID + ']',\n\t\t\tDEMAND_SUFFIX_STATE     = '[state]',\n\t\t\tDEMAND_SUFFIX_VALUE     = '[value]',\n\t\t\tDEMAND_PREFIX_HANDLER   = '/' + DEMAND_ID + '/handler/',\n\t\t\tDEMAND_PREFIX_VALIDATOR = '/validator/',\n\t\t\tSTRING_UNDEFINED        = 'undefined',\n\t\t\tSTRING_STRING           = 'string',\n\t\t\tSTRING_BOOLEAN          = 'boolean',\n\t\t\tPLEDGE_PENDING          = 'pending',\n\t\t\tPLEDGE_RESOLVED         = 'resolved',\n\t\t\tPLEDGE_REJECTED         = 'rejected',\n\t\t\tDEFAULT_HANDLER         = 'js',\n\t\t\tNULL                    = null,\n\t\t\tXHR                     = XMLHttpRequest,\n\t\t\tXDR                     = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t// regular expressions\n\t\t\tregexIsAbsolute         = /^\\//i,\n\t\t\tregexMatchHandler       = /^([-\\w]+\\/?)+!/,\n\t\t\tregexMatchSpecial       = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n\t\t\tregexMatchSourcemap     = /\\/\\/#\\s+sourceMappingURL\\s*=\\s*(.+?)\\.map/g,\n\t\t\tregexMatchProtocol      = /^http(s?):/,\n\t\t\tregexMatchUrl, regexMatchLsState,\n\t\t// flags\n\t\t\thasRemainingSpace     = localStorage && 'remainingSpace' in localStorage,\n\t\t// general storage & objects\n\t\t\tdefaults              = { cache: true, debug: false, version: '1.0.0', lifetime: 0, timeout: 5, base: '/' },\n\t\t\tmodules               = {},\n\t\t\tpattern               = {},\n\t\t\tprobes                = {},\n\t\t\tqueue, resolve, storage,\n\t\t// handler\n\t\t\thandlerJavascript,\n\t\t// configuration\n\t\t\tbase, cache, debug, timeoutXhr, timeoutQueue, version, lifetime;\n\n\t/**\n\t * demand required modules\n\t *\n\t * Will take any number of string arguments and return a Pledge.all\n\t * that resolves when all dependencies are resolved and rejects when\n\t * at least one dependency is rejected. Both, the resolved and\n\t * rejected callbacks will get all dependencies resolved or rejected\n\t * as arguments.\n\t *\n\t * If the scope of the call is of type \"Module\" relative paths are\n\t * resolved in relation to the parent module.\n\t *\n\t * @param {...String} dependency\n\t *\n\t * @returns {Pledge}\n\t *\n\t * @exports /demand\n\t */\n\tfunction demand() {\n\t\tvar self         = this || {},\n\t\t\tmodule       = isInstanceOf(self, Module) ? self : NULL,\n\t\t\tdependencies = arrayPrototypeSlice.call(arguments);\n\n\t\tdependencies.forEach(resolveDependency, module);\n\n\t\treturn Pledge.all(dependencies);\n\t}\n\n\t/**\n\t * provide modules\n\t *\n\t * Will either take two arguments, a \"path\" as a string first\n\t * and a \"definition\" function second or only a \"definition\"\n\t * function in case of an anonymous provide from a loaded module.\n\t *\n\t * In case of an anonymous provide it will be matched against\n\t * the queue to find the loader being resolved by this provide.\n\t * In case there is no loader in queue an error is thrown.\n\t *\n\t * When provide detects a duplicate a warning will be logged to\n\t * console in case the \"debug\" configuration option is set to true.\n\t *\n\t * @param {String} [path]\n\t * @param {Function} definition\n\t *\n\t * @returns {void|{when: Function}}\n\t *\n\t * @exports /provide\n\t */\n\tfunction provide() {\n\t\tvar path       = isTypeOf(arguments[0], STRING_STRING) ? arguments[0] : NULL,\n\t\t\tdefinition = !path ? arguments[0] : arguments[1],\n\t\t\tloader, dependencies;\n\n\t\tif(!path && queue.current) {\n\t\t\tloader = queue.current;\n\t\t\tpath   = loader.type + '!' + loader.path;\n\t\t}\n\n\t\tif(path) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tvar resolved = resolve.path(path),\n\t\t\t\t\tpointer  = modules[resolved.type] || (modules[resolved.type] = {}),\n\t\t\t\t\tmodule, pledge, defered;\n\n\t\t\t\tif(loader || !pointer[resolved.path]) {\n\t\t\t\t\tmodule = new Module(path, definition, dependencies);\n\t\t\t\t\tpledge = modules[module.type][module.path] = module.pledge;\n\n\t\t\t\t\tif(loader) {\n\t\t\t\t\t\tloader.timeout = clearTimeout(loader.timeout);\n\t\t\t\t\t\tdefered        = loader.defered;\n\n\t\t\t\t\t\tpledge.then(\n\t\t\t\t\t\t\tdefered.resolve,\n\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\tdefered.reject(new Error('unable to resolve module', path, arguments));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t!loader.cached && loader.store();\n\t\t\t\t\t\tqueue.length > 0 && queue.next();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlog('duplicate found for module ' + resolved.path);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn { when: function() { dependencies = arguments; } };\n\t\t} else {\n\t\t\tthrow new Error('unspecified anonymous provide');\n\t\t}\n\t}\n\n\t/**\n\t * alter demand configuration\n\t *\n\t * @param {Object} aConfig\n\t */\n\tfunction configure(aConfig) {\n\t\tvar aCache    = aConfig.cache,\n\t\t\taDebug    = aConfig.debug,\n\t\t\taVersion  = aConfig.version,\n\t\t\taTimeout  = aConfig.timeout,\n\t\t\taLifetime = aConfig.lifetime,\n\t\t\taBase     = aConfig.base,\n\t\t\taPattern  = aConfig.pattern,\n\t\t\taProbes   = aConfig.probes,\n\t\t\tkey;\n\t\t\t\t\n\t\tcache   = isTypeOf(aCache, STRING_BOOLEAN)  ? aCache   : cache;\n\t\tdebug   = isTypeOf(aDebug, STRING_BOOLEAN)  ? aDebug   : debug;\n\t\tversion = isTypeOf(aVersion, STRING_STRING) ? aVersion : version;\n\n\t\tif(isPositiveInteger(aTimeout)) {\n\t\t\ttimeoutXhr   = Math.min(Math.max(aTimeout, 2), 10) * 1000;\n\t\t\ttimeoutQueue = Math.min(Math.max(timeoutXhr / 5, 1000), 5000);\n\t\t}\n\t\t\t\t\n\t\tif(isPositiveInteger(aLifetime)) {\n\t\t\tlifetime = aLifetime * 1000;\n\t\t}\n\t\t\t\t\n\t\tif(isTypeOf(aBase, STRING_STRING)) {\n\t\t\tbase = pattern.base = new Pattern('', resolve.url(aBase));\n\t\t}\n\t\t\t\t\n\t\tif(isObject(aPattern)) {\n\t\t\tfor(key in aPattern) {\n\t\t\t\tkey !== 'base' && (pattern[key] = new Pattern(key, aPattern[key]));\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\tif(isObject(aProbes)) {\n\t\t\tfor(key in aProbes) {\n\t\t\t\tprobes[key] = aProbes[key];\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * resolve dependency names to existing Modules or a new Loader\n\t *\n\t * @param {String} dependency\n\t * @param {Number} index\n\t * @param {Object[]} dependencies\n\t */\n\tfunction resolveDependency(dependency, index, dependencies) {\n\t\tvar self     = this,\n\t\t\tresolved = resolve.path(dependency, self),\n\t\t\ttype     = resolved.type,\n\t\t\tpath     = resolved.path,\n\t\t\tpointer  = modules[type] || (modules[type] = {});\n\n\t\tdependencies[index] = pointer[path] || (pointer[path] = (new Loader(dependency, self)).pledge);\n\t}\n\n\t/**\n\t * Shortcut to globally provide internal functions\n\t *\n\t * @param {String} id\n\t * @param {Function} factory\n\t */\n\tfunction assign(id, factory) {\n\t\tprovide(id, function() { return factory; });\n\t}\n\n\t/**\n\t * Get the current timestamp\n\t * \n\t * @returns {Number}\n\t */\n\tfunction getTimestamp() {\n\t\treturn +new Date();\n\t}\n\n\t/**\n\t * add timestamp to a given URL\n\t *\n\t * @param {String} aUrl\n\t *\n\t * @returns {String}\n\t */\n\tfunction addTimestamp(aUrl) {\n\t\tresolver.href = aUrl;\n\n\t\tvar value = resolver.search,\n\t\t\tparam = 'demand[timestamp]=' + getTimestamp();\n\n\t\tresolver.search += (value && value !== '?') ? '&' + param : '?' + param;\n\n\t\treturn resolver.href;\n\t}\n\n\t/**\n\t * log a message to the console\n\t *\n\t * @param {String|Error} aMessage\n\t */\n\tfunction log(aMessage) {\n\t\tvar type = (isInstanceOf(aMessage, Error)) ? 'error' : 'warn';\n\n\t\tif(!isTypeOf(console, STRING_UNDEFINED) && (debug || type !== 'warn')) {\n\t\t\tconsole[type](aMessage.toString());\n\t\t}\n\t}\n\n\t/**\n\t * generate a new RegExp\n\t *\n\t * @param {String} expression\n\t * @param {{String}} [modifier]\n\t *\n\t * @returns {RegExp}\n\t */\n\tfunction regex(expression, modifier) {\n\t\treturn new RegExp(expression, modifier);\n\t}\n\n\t/**\n\t * escape a string to be used in a RegExp\n\t *\n\t * @param {String} aValue\n\t *\n\t * @returns {String}\n\t */\n\tfunction escape(aValue) {\n\t\treturn aValue.replace(regexMatchSpecial, '\\\\$&');\n\t}\n\n\t/**\n\t * remove the protocol portion from any URL\n\t *\n\t * @param {String} url\n\t *\n\t * @returns {String}\n\t */\n\tfunction removeProtocol(url) {\n\t\treturn url.replace(regexMatchProtocol, '');\n\t}\n\n\t/**\n\t * check whether a given path is absolute\n\t *\n\t * @param {String} aPath\n\t *\n\t * @returns {Boolean}\n\t */\n\tfunction isAbsolute(aPath) {\n\t\treturn regexIsAbsolute.test(aPath);\n\t}\n\n\t/**\n\t * check whether a passed object is an instance of a certain type\n\t *\n\t * @param {*} object\n\t * @param {*} module\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isInstanceOf\n\t */\n\tfunction isInstanceOf(object, module) {\n\t\treturn object instanceof module;\n\t}\n\t\t\t\n\t/**\n\t * check wheter a given object is of a certain type\n\t *\n\t * @param {*} object\n\t * @param {String} type\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isTypeOf\n\t */\n\tfunction isTypeOf(object, type) {\n\t\treturn typeof object === type;\n\t}\n\n\t/**\n\t * check whether a given object is an object\n\t *\n\t * @param {*} object\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isObject\n\t */\n\tfunction isObject(object) {\n\t\treturn object && isTypeOf(object, 'object');\n\t}\n\n\t/**\n\t * check whether a given value is a positive integer\n\t *\n\t * @param {*} value\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isPositiveInteger\n\t */\n\tfunction isPositiveInteger(value) {\n\t\treturn isTypeOf(value, 'number') && isFinite(value) && Math.floor(value) === value && value >= 0;\n\t}\n\n\tresolve = {\n\t\t/**\n\t\t * resolve any given url\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\turl: function(aUrl) {\n\t\t\tresolver.href = aUrl;\n\n\t\t\treturn resolver.href;\n\t\t},\n\t\t/**\n\t\t * resolve any given path\n\t\t *\n\t\t * if context is either \"Loader\" or \"Module\" nothing will\n\t\t * be returned but instead \"handler\" and \"path\" will be\n\t\t * set directly on context. In case of \"Loader\" an\n\t\t * additional property \"url\" will be set as well.\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {Module} [aParent]\n\t\t *\n\t\t * @returns {void|{type: String, path: String}}\n\t\t */\n\t\tpath: function(aPath, aParent) {\n\t\t\tvar self     = this,\n\t\t\t\tpointer  = aPath.match(regexMatchHandler) || DEFAULT_HANDLER,\n\t\t\t\tisLoader = isInstanceOf(self, Loader),\n\t\t\t\tkey, match;\n\t\t\t\t\t\t\n\t\t\tif(!isTypeOf(pointer, STRING_STRING)) {\n\t\t\t\taPath   = aPath.replace(regex('^' + escape(pointer[0])), '');\n\t\t\t\t\t\t\n\t\t\t\tpointer = pointer[1];\n\t\t\t}\n\n\t\t\tif(!isAbsolute(aPath)) {\n\t\t\t\taPath = '/' + resolve.url(((aParent && aParent.path && resolve.url(aParent.path + '/../')) || '/') + aPath).replace(regexMatchUrl, '');\n\t\t\t}\n\t\t\t\t\t\n\t\t\tfor(key in pattern) {\n\t\t\t\tpattern[key].matches(aPath) && (!match || match.weight < pattern[key].weight) && (match = pattern[key]);\n\t\t\t}\n\t\t\t\t\t\n\t\t\tif(isLoader || isInstanceOf(self, Module)) {\n\t\t\t\tself.type = pointer;\n\t\t\t\tself.path = aPath;\n\t\t\t\t\t\t\n\t\t\t\tisLoader && (self.url = removeProtocol(resolve.url(match.process(aPath))));\n\t\t\t} else {\n\t\t\t\treturn { type: pointer, path: aPath };\n\t\t\t}\n\t\t}\n\t};\n\n\tstorage = {\n\t\t/**\n\t\t * retrieve cache for a given path and URL\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {void|String}\n\t\t */\n\t\tget: function(aPath, aUrl) {\n\t\t\tvar id, state;\n\n\t\t\tif(localStorage && cache) {\n\t\t\t\tid    = DEMAND_PREFIX + '[' + aPath + ']';\n\t\t\t\tstate = JSON.parse(localStorage.getItem(id + DEMAND_SUFFIX_STATE));\n\n\t\t\t\tif(state && state.version === version && state.url === aUrl && (state.expires === 0 || state.expires > getTimestamp)) {\n\t\t\t\t\treturn localStorage.getItem(id + DEMAND_SUFFIX_VALUE);\n\t\t\t\t} else {\n\t\t\t\t\tstorage.clear(aPath);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * store cache for a given path, value and url\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aValue\n\t\t * @param {String} aUrl\n\t\t */\n\t\tset: function(aPath, aValue, aUrl) {\n\t\t\tvar id, spaceBefore;\n\n\t\t\tif(localStorage && cache) {\n\t\t\t\tid = DEMAND_PREFIX + '[' + aPath + ']';\n\n\t\t\t\ttry {\n\t\t\t\t\tspaceBefore = hasRemainingSpace ? localStorage.remainingSpace : NULL;\n\n\t\t\t\t\tlocalStorage.setItem(id + DEMAND_SUFFIX_VALUE, aValue);\n\t\t\t\t\tlocalStorage.setItem(id + DEMAND_SUFFIX_STATE, JSON.stringify({ version: version, expires: lifetime > 0 ? getTimestamp + lifetime : 0, url: aUrl }));\n\n\t\t\t\t\t// strict equality check with \"===\" is required due to spaceBefore might be \"0\"\n\t\t\t\t\tif(spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) {\n\t\t\t\t\t\tthrow 'QuotaExceedError';\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\tlog('unable to cache module ' + aPath);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * clear either a given path, all cached resources or only expired resources\n\t\t *\n\t\t * @param {String|Boolean} [aPath]\n\t\t */\n\t\tclear: function(aPath) {\n\t\t\tvar id, key, match, state;\n\n\t\t\tif(localStorage) {\n\t\t\t\tswitch(typeof aPath) {\n\t\t\t\t\t// handle if aPath is of type \"string\" => clear specific\n\t\t\t\t\tcase STRING_STRING:\n\t\t\t\t\t\tid = DEMAND_PREFIX + '[' + aPath + ']';\n\n\t\t\t\t\t\tlocalStorage.removeItem(id + DEMAND_SUFFIX_STATE);\n\t\t\t\t\t\tlocalStorage.removeItem(id + DEMAND_SUFFIX_VALUE);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// handle if aPath is of type \"boolean\" and is truthy => clear expired\n\t\t\t\t\tcase STRING_BOOLEAN:\n\t\t\t\t\t\tif(aPath) {\n\t\t\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\t\t\tmatch = key.match(regexMatchLsState);\n\n\t\t\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\t\t\tstate = JSON.parse(localStorage.getItem(DEMAND_PREFIX + '[' + match[1] + ']' + DEMAND_SUFFIX_STATE));\n\n\t\t\t\t\t\t\t\t\tif(state && state.expires > 0 && state.expires <= getTimestamp) {\n\t\t\t\t\t\t\t\t\t\tstorage.clear(match[1]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// handle if aPath is of type \"undefined\" => clear all\n\t\t\t\t\tcase STRING_UNDEFINED:\n\t\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\t\tkey.indexOf(DEMAND_PREFIX) === 0 && (localStorage.removeItem(key));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\thandlerJavascript = {\n\t\t/**\n\t\t * Enables modification of the URL that gets requested\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tprepare: function(aUrl) {\n\t\t\treturn aUrl + '.js';\n\t\t},\n\t\t/**\n\t\t * handles resolving of JavaScript modules\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aValue\n\t\t */\n\t\tresolve: function(aPath, aValue) {\n\t\t\tvar script = document.createElement('script');\n\n\t\t\tscript.defer = script.async = true;\n\t\t\tscript.text  = aValue;\n\n\t\t\tscript.setAttribute('demand-path', aPath);\n\n\t\t\ttarget.appendChild(script);\n\t\t},\n\t\t/**\n\t\t * handles modifying of JavaScript module's source prior to caching\n\t\t *\n\t\t * Rewrites sourcemap URL to an absolute URL in relation to the URL the module was loaded from\n\t\t *\n\t\t * @param {String} aUrl\n\t\t * @param {String} aValue\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tmodify: function(aUrl, aValue) {\n\t\t\tvar match, replacement;\n\n\t\t\twhile(match = regexMatchSourcemap.exec(aValue)) {\n\t\t\t\treplacement = removeProtocol(resolve.url(aUrl + '/../' + match[1]));\n\t\t\t\taValue      = aValue.replace(match[0], '//# sourcemap=' + replacement + '.map');\n\t\t\t}\n\n\t\t\treturn aValue;\n\t\t}\n\t};\n\n\t/**\n\t * provides promise like behaviour\n\t *\n\t * unlike native Promises and polyfills a Pledge\n\t * can be resolved and rejected with multiple values\n\t * which will all get applied\n\t *\n\t * @param {Function} executor\n\t *\n\t * @constructor\n\t * @exports /pledge\n\t */\n\tfunction Pledge(executor) {\n\t\tvar self     = this,\n\t\t\tlistener = { resolved: [], rejected: [] };\n\n\t\tfunction resolve() {\n\t\t\thandle(PLEDGE_RESOLVED, arguments);\n\t\t}\n\n\t\tfunction reject() {\n\t\t\thandle(PLEDGE_REJECTED, arguments);\n\t\t}\n\n\t\tfunction handle(aState, aParameter) {\n\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\tself.state = aState;\n\t\t\t\tself.value = aParameter;\n\n\t\t\t\tlistener[aState].forEach(function(aHandler) {\n\t\t\t\t\taHandler.apply(NULL, self.value);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.then = function(aResolved, aRejected) {\n\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\taResolved && listener[PLEDGE_RESOLVED].push(aResolved);\n\t\t\t\taRejected && listener[PLEDGE_REJECTED].push(aRejected);\n\t\t\t} else {\n\t\t\t\tswitch(self.state) {\n\t\t\t\t\tcase PLEDGE_RESOLVED:\n\t\t\t\t\t\taResolved.apply(NULL, self.value);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PLEDGE_REJECTED:\n\t\t\t\t\t\taRejected.apply(NULL, self.value);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\texecutor(resolve, reject);\n\t}\n\n\tPledge.prototype = {\n\t\tconstructor: Pledge,\n\t\tstate:       PLEDGE_PENDING,\n\t\tvalue:       NULL,\n\t\tlistener:    NULL,\n\t\tthen:        NULL\n\t};\n\n\t/**\n\t * provides Promise.defer like behaviour\n\t *\n\t * @returns {Object}\n\t */\n\tPledge.defer = function() {\n\t\tvar self = {};\n\n\t\tself.pledge = new Pledge(function(aResolve, aReject) {\n\t\t\tself.resolve = aResolve;\n\t\t\tself.reject  = aReject;\n\t\t});\n\n\t\treturn self;\n\t};\n\n\t/**\n\t * provides Promise.all like behaviour\n\t *\n\t * unlike native Promise.all Pledge.all will not reject on the\n\t * first rejected Pledge but when all Pledges ere either\n\t * resolved or rejected. Rejection callbacks will get passed\n\t * all rejected reasons, not only the first one.\n\t *\n\t * @param {Object[]} aPledges\n\t *\n\t * @returns {Pledge}\n\t */\n\tPledge.all = function(aPledges) {\n\t\tvar defered       = Pledge.defer(),\n\t\t\tpledge        = defered.pledge,\n\t\t\tresolved      = [],\n\t\t\trejected      = [],\n\t\t\tcountTotal    = aPledges.length,\n\t\t\tcountResolved = 0;\n\n\t\taPledges.forEach(function(aPledge, aIndex) {\n\t\t\taPledge.then(\n\t\t\t\tfunction() {\n\t\t\t\t\tresolved[aIndex] = arrayPrototypeSlice.call(arguments);\n\n\t\t\t\t\tcountResolved++;\n\n\t\t\t\t\tcountResolved === countTotal && defered.resolve.apply(NULL, arrayPrototypeConcat.apply([], resolved));\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\trejected.push(arrayPrototypeSlice.call(arguments));\n\n\t\t\t\t\trejected.length + countResolved === countTotal && defered.reject.apply(NULL, arrayPrototypeConcat.apply([], rejected));\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\treturn pledge;\n\t};\n\n\t/**\n\t * provides Promise.race like behaviour\n\t *\n\t * @param {Object[]} aPledges\n\t *\n\t * @returns {Pledge}\n\t */\n\tPledge.race = function(aPledges) {\n\t\tvar defered = Pledge.defer();\n\n\t\taPledges.forEach(function(aPledge) {\n\t\t\taPledge.then(\n\t\t\t\tdefered.resolve,\n\t\t\t\tdefered.reject\n\t\t\t);\n\t\t});\n\n\t\treturn defered.pledge;\n\t};\n\n\t/**\n\t * internal error class\n\t *\n\t * @param {String} aMessage\n\t * @param {String} [aModule]\n\t * @param {Object[]} [aStack]\n\t *\n\t * @constructor\n\t */\n\tfunction Error(aMessage, aModule, aStack) {\n\t\tvar self = this;\n\n\t\tself.message = aMessage;\n\n\t\taModule && (self.module  = aModule);\n\t\taStack && (self.stack = arrayPrototypeSlice.call(aStack));\n\t}\n\n\tError.prototype = {\n\t\tmessage: NULL,\n\t\tmodule:  NULL,\n\t\tstack:   NULL,\n\t\t/**\n\t\t * handles output to console\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\ttoString: function() {\n\t\t\tvar self   = this,\n\t\t\t\tresult = DEMAND_PREFIX + ' ' + self.message + ' ' + self.module;\n\n\t\t\tif(self.stack) {\n\t\t\t\tresult = Error.traverse(self.stack, result, 1);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t};\n\n\t/**\n\t * handles recursion of stack on output to console\n\t *\n\t * @param {Object[]} stack\n\t * @param {String} value\n\t * @param {Number} depth\n\t *\n\t * @returns {String}\n\t */\n\tError.traverse = function(stack, value, depth) {\n\t\tvar indention = new Array(depth + 1).join(' ');\n\n\t\tstack.forEach(function(item) {\n\t\t\tvalue += '\\n' + indention + '> ' + item.message + ' ' + item.module;\n\n\t\t\tif(item.stack) {\n\t\t\t\tvalue = Error.traverse(item.stack, value, depth + 1);\n\t\t\t}\n\t\t});\n\n\t\treturn value;\n\t};\n\n\t/**\n\t * abstraction for pattern matching of paths\n\t *\n\t * @param {String} aPattern\n\t * @param {String} aUrl\n\t *\n\t * @constructor\n\t */\n\tfunction Pattern(aPattern, aUrl) {\n\t\tvar self = this;\n\n\t\tself.weight       = aPattern.length;\n\t\tself.url          = resolve.url(aUrl);\n\t\tself.regexPattern = regex('^' + escape(aPattern));\n\t\tself.regexUrl     = regex('^' + escape(aUrl));\n\t}\n\n\tPattern.prototype = {\n\t\tweight:       0,\n\t\turl:          NULL,\n\t\tregexPattern: NULL,\n\t\tregexUrl:     NULL,\n\t\t/**\n\t\t * check whether a given path matches the pattern\n\t\t *\n\t\t * @param {String} aPath\n\t\t *\n\t\t * @returns {Boolean}\n\t\t */\n\t\tmatches: function(aPath) {\n\t\t\treturn this.regexPattern.test(aPath);\n\t\t},\n\t\t/**\n\t\t * remove this pattern's URL from a given URL\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tremove: function(aUrl) {\n\t\t\treturn aUrl.replace(this.regexUrl, '');\n\t\t},\n\t\t/**\n\t\t * process this pattern for a given path\n\t\t *\n\t\t * @param {String} aPath\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tprocess: function(aPath) {\n\t\t\tvar self = this;\n\n\t\t\treturn aPath.replace(self.regexPattern, self.url);\n\t\t}\n\t};\n\n\t/**\n\t * Queue handling for anonymous (loaded) modules\n\t *\n\t * @constructor\n\t */\n\tfunction Queue() {\n\t\tvar self = this;\n\n\t\tself.current = NULL;\n\t\tself.queue   = [];\n\t}\n\n\tQueue.prototype = {\n\t\tcurrent: NULL,\n\t\tqueue:   NULL,\n\t\tlength:  0,\n\t\t/**\n\t\t * add an item to the queue\n\t\t *\n\t\t * @param {Loader} aItem\n\t\t */\n\t\tadd: function(aItem) {\n\t\t\tvar self  = this,\n\t\t\t\tqueue = self.queue;\n\n\t\t\tqueue.push(aItem);\n\n\t\t\tself.length++;\n\n\t\t\tqueue.length === 1 && self.next();\n\t\t},\n\t\t/**\n\t\t * process the queue\n\t\t */\n\t\tnext: function() {\n\t\t\tvar self    = this,\n\t\t\t\tcurrent = self.current,\n\t\t\t\tqueue   = self.queue,\n\t\t\t\tdefered, path, handler;\n\n\t\t\tif(current) {\n\t\t\t\tself.current = NULL;\n\n\t\t\t\tqueue.shift();\n\t\t\t\tself.length--;\n\t\t\t}\n\n\t\t\tif(queue.length) {\n\t\t\t\tcurrent = self.current = self.queue[0];\n\t\t\t\tdefered = current.defered;\n\t\t\t\tpath    = current.path;\n\t\t\t\thandler = current.handler;\n\n\t\t\t\t!current.cached && handler.modify && (current.source = handler.modify(current.url, current.source));\n\n\t\t\t\thandler.resolve(path, current.source);\n\n\t\t\t\tif(probes[path]) {\n\t\t\t\t\tcurrent.probe();\n\t\t\t\t}\n\n\t\t\t\tcurrent.timeout = setTimeout(function() {\n\t\t\t\t\tdefered.reject(new Error('timeout resolving module', path));\n\t\t\t\t}, timeoutQueue);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * module loader\n\t *\n\t * @param {String} aPath\n\t * @param {Module} [aParent]\n\t *\n\t * @constructor\n\t */\n\tfunction Loader(aPath, aParent) {\n\t\tvar self    = this,\n\t\t\tdefered = Pledge.defer(),\n\t\t\txhr;\n\n\t\tresolve.path.call(self, aPath, aParent);\n\n\t\tself.defered = defered;\n\t\tself.pledge  = defered.pledge;\n\n\t\tif(!aParent) {\n\t\t\tself.pledge.then(NULL, log);\n\t\t}\n\n\t\tdemand(DEMAND_PREFIX_HANDLER + self.type)\n\t\t\t.then(\n\t\t\t\tfunction(handler) {\n\t\t\t\t\tself.retrieve();\n\n\t\t\t\t\tself.handler = handler;\n\n\t\t\t\t\tif(self.cached) {\n\t\t\t\t\t\tqueue.add(self);\n\t\t\t\t\t} else {\n\t\t\t\t\t\txhr            = regexMatchUrl.test(self.url) ? new XHR() : new XDR();\n\t\t\t\t\t\txhr.onprogress = function() {};\n\t\t\t\t\t\txhr.ontimeout  = xhr.onerror = xhr.onabort = function() { defered.reject(new Error('unable to load module', self.path)); };\n\t\t\t\t\t\txhr.onload     = function() { self.timeout = clearTimeout(self.timeout); self.source = xhr.responseText; queue.add(self); };\n\n\t\t\t\t\t\txhr.open('GET', addTimestamp(handler.prepare(self.url)), true);\n\t\t\t\t\t\txhr.send();\n\n\t\t\t\t\t\tself.timeout = setTimeout(function() { if(xhr.readyState < 4) { xhr.abort(); } }, timeoutXhr);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefered.reject\n\t\t\t);\n\t}\n\n\tLoader.prototype = {\n\t\ttype:    NULL,\n\t\thandler: NULL,\n\t\tpath:    NULL,\n\t\turl:     NULL,\n\t\tdefered: NULL,\n\t\tpledge:  NULL,\n\t\tcached:  NULL,\n\t\tsource:  NULL,\n\t\ttimeout: NULL,\n\t\t/**\n\t\t * probe for the loading state of an external module\n\t\t */\n\t\tprobe: function() {\n\t\t\tvar self      = this,\n\t\t\t\tpath      = self.path,\n\t\t\t\tisPending = self.pledge.state === PLEDGE_PENDING,\n\t\t\t\tresult;\n\n\t\t\tif(isPending) {\n\t\t\t\tif(result = probes[path]()) {\n\t\t\t\t\tprovide(function() { return result; });\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(self.probe, 100);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * store loaders result in localStorage\n\t\t */\n\t\tstore: function() {\n\t\t\tvar self = this;\n\n\t\t\tstorage.set(self.path, self.source, self.url);\n\t\t},\n\t\t/**\n\t\t * retrieve cache for loader\n\t\t */\n\t\tretrieve: function() {\n\t\t\tvar self   = this,\n\t\t\t\tcache  = storage.get(self.path, self.url),\n\t\t\t\tcached = self.cached = !!(cache);\n\n\t\t\tcached && (self.source = cache);\n\t\t}\n\t};\n\n\t/**\n\t * module\n\t *\n\t * @param {String} aPath\n\t * @param {Function} aDefinition\n\t * @param {Object[]} aDependencies\n\t *\n\t * @constructor\n\t */\n\tfunction Module(aPath, aDefinition, aDependencies) {\n\t\tvar self    = this,\n\t\t\tdefered = Pledge.defer();\n\n\t\tresolve.path.call(self, aPath);\n\n\t\t(self.pledge = defered.pledge).then(NULL, function() {\n\t\t\tlog(new Error('unable to resolve module', self.path, arguments));\n\t\t});\n\n\t\tif(aDependencies && aDependencies.length > 0) {\n\t\t\tdemand.apply(self, aDependencies)\n\t\t\t\t.then(\n\t\t\t\t\tfunction() { defered.resolve(aDefinition.apply(NULL, arguments)); },\n\t\t\t\t\tfunction() { defered.reject(new Error('unable to resolve dependencies for', self.path, arguments)); }\n\t\t\t\t);\n\t\t} else {\n\t\t\tdefered.resolve(aDefinition());\n\t\t}\n\t}\n\n\tModule.prototype = {\n\t\ttype:    NULL,\n\t\tpath:    NULL,\n\t\tpledge:  NULL\n\t};\n\n\t// initialization\n\t\t// regex\n\t\t\tregexMatchUrl     = regex('^' + escape(resolve.url('/')));\n\t\t\tregexMatchLsState = regex('^' + escape(DEMAND_PREFIX + '\\[(.+?)\\]' + DEMAND_SUFFIX_STATE + '$'));\n\n\t\t// create queue\n\t\t\tqueue = new Queue();\n\n\t\t// execute localStorage garbage collection\n\t\t\tstorage.clear(true);\n\n\t\t// add pattern for \"/demand\" to point to original demand URL\n\t\t\tpattern['/' + DEMAND_ID] = new Pattern('/' + DEMAND_ID, resolve.url(configUrl + '/../').slice(0, -1));\n\n\t\t// configure\n\t\t\tconfigure(defaults) && configSettings && configure(configSettings);\n\n\t\t// register in global scope\n\t\t\tdemand.configure  = configure;\n\t\t\tdemand.clear      = storage.clear;\n\t\t\tglobal.demand     = demand;\n\t\t\tglobal.provide    = provide;\n\n\t\t// register modules\n\t\t\tassign('/' + DEMAND_ID, demand);\n\t\t\tassign('/provide', provide);\n\t\t\tassign('/pledge', Pledge);\n\t\t\tassign('/resolve/url', resolve.url);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isObject', isObject);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isTypeOf', isTypeOf);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isInstanceOf', isInstanceOf);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isPositiveInteger', isPositiveInteger);\n\t\t\tassign(DEMAND_PREFIX_HANDLER + DEFAULT_HANDLER, handlerJavascript);\n\n\t// load main script\n\t\tif(configMain) { setTimeout(function() { demand(configMain); }); }\n}(this, document, localStorage, JSON, XMLHttpRequest, setTimeout, clearTimeout, demand.url, demand.main, demand.settings));"],"sourceRoot":"/source/"}